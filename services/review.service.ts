import { ICreateReview, IReview, IReviewsResponse } from '@/types/review.interface'
import { axiosInstance } from './api.helper'

export const ReviewService = {
  async getReviews(bookId: string): Promise<IReviewsResponse> {
    try {
      const response = await axiosInstance.get(`api/v1/book-reviews/search?bookId=${bookId}`)
      console.log('‚úÖ –û—Ç–∑—ã–≤—ã –ø–æ–ª—É—á–µ–Ω—ã:', response.data)
      return response.data
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–æ–≤:', error)
      throw error
    }
  },

  async getUserReviews(userId: string, page: number = 0, size: number = 5): Promise<IReviewsResponse> {
    try {
      const response = await axiosInstance.get(`api/v1/book-reviews/search?userId=${userId}&page=${page}&size=${size}`)
      console.log('‚úÖ –û—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω—ã:', response.data)
      return response.data
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
      throw error
    }
  },

  async createReview(reviewData: ICreateReview): Promise<IReview> {
    try {
      console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–∑—ã–≤–∞:', reviewData)
      const response = await axiosInstance.post('api/v1/book-reviews', reviewData)
      console.log('‚úÖ –û—Ç–∑—ã–≤ —Å–æ–∑–¥–∞–Ω:', response.data)
      // API –º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å –æ–±—ä–µ–∫—Ç —Å data –∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é –æ—Ç–∑—ã–≤
      return response.data.data || response.data
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞:', error)
      throw error
    }
  },

  async updateReview(uuid: string, reviewData: Partial<ICreateReview>): Promise<IReview> {
    try {
      const response = await axiosInstance.put(`api/v1/book-reviews/${uuid}`, reviewData)
      return response.data
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞:', error)
      throw error
    }
  },

  async deleteReview(uuid: string): Promise<void> {
    try {
      await axiosInstance.delete(`api/v1/book-reviews/${uuid}`)
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞:', error)
      throw error
    }
  }
}
