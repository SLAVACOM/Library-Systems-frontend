'use client'

import CoordinatePicker from '@/components/coordinate-picker'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Input } from '@/components/ui/input'
import { Label } from '@/components/ui/label'
import { Textarea } from '@/components/ui/textarea'
import { LibraryService } from '@/services/library.service'
import { ArrowLeft, MapPin } from 'lucide-react'
import Link from 'next/link'
import { useRouter } from 'next/navigation'
import { useState } from 'react'

export default function CreateLibraryPage() {
  const router = useRouter()
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState<string | null>(null)
  const [formData, setFormData] = useState({
    name: '',
    address: '',
    city: '',
    phone: '',
    email: '',
    website: '',
    description: '',
    latitude: '',
    longitude: '',
  })

  const handleChange = (
    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
  ) => {
    const { name, value } = e.target
    setFormData((prev) => ({ ...prev, [name]: value }))
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setError(null)

    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!formData.name.trim()) {
      setError('–ù–∞–∑–≤–∞–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ')
      return
    }
    if (!formData.address.trim()) {
      setError('–ê–¥—Ä–µ—Å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω')
      return
    }
    if (!formData.city.trim()) {
      setError('–ì–æ—Ä–æ–¥ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω')
      return
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è email
    if (formData.email && !/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(formData.email)) {
      setError('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å')
      return
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
    if (formData.latitude && (isNaN(Number(formData.latitude)) || Number(formData.latitude) < -90 || Number(formData.latitude) > 90)) {
      setError('–®–∏—Ä–æ—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º –æ—Ç -90 –¥–æ 90')
      return
    }
    if (formData.longitude && (isNaN(Number(formData.longitude)) || Number(formData.longitude) < -180 || Number(formData.longitude) > 180)) {
      setError('–î–æ–ª–≥–æ—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º –æ—Ç -180 –¥–æ 180')
      return
    }

    try {
      setLoading(true)
      await LibraryService.createLibrary({
        name: formData.name.trim(),
        address: formData.address.trim(),
        city: formData.city.trim(),
        phone: formData.phone.trim() || undefined,
        email: formData.email.trim() || undefined,
        website: formData.website.trim() || undefined,
        description: formData.description.trim() || undefined,
        latitude: formData.latitude ? Number(formData.latitude) : undefined,
        longitude: formData.longitude ? Number(formData.longitude) : undefined,
      })
      router.push('/libraries')
    } catch (err) {
      console.error('Failed to create library:', err)
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.')
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="container mx-auto py-8 px-4 max-w-3xl">
      <div className="mb-6">
        <Link href="/libraries">
          <Button variant="ghost" className="gap-2">
            <ArrowLeft className="h-4 w-4" />
            –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É
          </Button>
        </Link>
      </div>

      <Card>
        <CardHeader>
          <CardTitle className="text-2xl">–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É</CardTitle>
        </CardHeader>
        <CardContent>
          <form onSubmit={handleSubmit} className="space-y-6">
            {error && (
              <div className="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded">
                {error}
              </div>
            )}

            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div className="space-y-2">
                <Label htmlFor="name">
                  –ù–∞–∑–≤–∞–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ <span className="text-red-500">*</span>
                </Label>
                <Input
                  id="name"
                  name="name"
                  type="text"
                  value={formData.name}
                  onChange={handleChange}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –≥–æ—Ä–æ–¥—Å–∫–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞"
                  required
                  maxLength={200}
                  disabled={loading}
                />
                <p className="text-xs text-muted-foreground">
                  {formData.name.length}/200 —Å–∏–º–≤–æ–ª–æ–≤
                </p>
              </div>

              <div className="space-y-2">
                <Label htmlFor="city">
                  –ì–æ—Ä–æ–¥ <span className="text-red-500">*</span>
                </Label>
                <Input
                  id="city"
                  name="city"
                  type="text"
                  value={formData.city}
                  onChange={handleChange}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: Kazan"
                  required
                  maxLength={100}
                  disabled={loading}
                />
              </div>
            </div>

            <div className="space-y-2">
              <Label htmlFor="address">
                –ê–¥—Ä–µ—Å <span className="text-red-500">*</span>
              </Label>
              <Input
                id="address"
                name="address"
                type="text"
                value={formData.address}
                onChange={handleChange}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: —É–ª. –ü—É—à–∫–∏–Ω–∞, –¥. 10"
                required
                maxLength={300}
                disabled={loading}
              />
              <p className="text-xs text-muted-foreground">
                {formData.address.length}/300 —Å–∏–º–≤–æ–ª–æ–≤
              </p>
            </div>

            {/* –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –∫–∞—Ä—Ç—ã */}
            <div className="space-y-4 p-4 border border-violet-200 rounded-lg bg-violet-50/50">
              <div className="flex items-center gap-2 text-sm font-medium text-violet-900">
                <MapPin className="h-4 w-4" />
                –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –∫–∞—Ä—Ç–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
              </div>

              {/* –ö–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞ –Ω–∞ –∫–∞—Ä—Ç–µ */}
              <CoordinatePicker
                latitude={formData.latitude ? Number(formData.latitude) : undefined}
                longitude={formData.longitude ? Number(formData.longitude) : undefined}
                address={formData.address}
                city={formData.city}
                onCoordinatesChange={(lat, lng) => {
                  setFormData({
                    ...formData,
                    latitude: String(lat),
                    longitude: String(lng),
                  })
                }}
              />
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="space-y-2">
                  <Label htmlFor="latitude" className="text-sm">
                    –®–∏—Ä–æ—Ç–∞ (Latitude)
                  </Label>
                  <Input
                    id="latitude"
                    name="latitude"
                    type="number"
                    step="0.000001"
                    value={formData.latitude}
                    onChange={handleChange}
                    placeholder="55.796883"
                    min="-90"
                    max="90"
                    disabled={loading}
                  />
                  <p className="text-xs text-muted-foreground">
                    –û—Ç -90 –¥–æ 90 (–Ω–∞–ø—Ä–∏–º–µ—Ä: 55.796883)
                  </p>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="longitude" className="text-sm">
                    –î–æ–ª–≥–æ—Ç–∞ (Longitude)
                  </Label>
                  <Input
                    id="longitude"
                    name="longitude"
                    type="number"
                    step="0.000001"
                    value={formData.longitude}
                    onChange={handleChange}
                    placeholder="49.133984"
                    min="-180"
                    max="180"
                    disabled={loading}
                  />
                  <p className="text-xs text-muted-foreground">
                    –û—Ç -180 –¥–æ 180 (–Ω–∞–ø—Ä–∏–º–µ—Ä: 49.133984)
                  </p>
                </div>
              </div>

              <div className="text-xs text-muted-foreground bg-white/60 p-3 rounded border border-violet-100">
                üí° <strong>–ö–∞–∫ —É–∫–∞–∑–∞—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:</strong>
                <ul className="mt-1 ml-4 list-disc space-y-1">
                  <li><strong>–°–ø–æ—Å–æ–± 1:</strong> –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í—ã–±—Ä–∞—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–∞ –∫–∞—Ä—Ç–µ" –≤—ã—à–µ</li>
                  <li><strong>–°–ø–æ—Å–æ–± 2:</strong> –û—Ç–∫—Ä–æ–π—Ç–µ <a href="https://yandex.ru/maps/" target="_blank" className="text-violet-600 hover:underline">–Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç—ã</a>, –Ω–∞–π–¥–∏—Ç–µ –∞–¥—Ä–µ—Å, –∫–ª–∏–∫–Ω–∏—Ç–µ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–æ–π ‚Üí "–ß—Ç–æ –∑–¥–µ—Å—å?" –∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã</li>
                  <li><strong>–°–ø–æ—Å–æ–± 3:</strong> –í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤—Ä—É—á–Ω—É—é –≤ –ø–æ–ª—è –Ω–∏–∂–µ</li>
                </ul>
              </div>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div className="space-y-2">
                <Label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω</Label>
                <Input
                  id="phone"
                  name="phone"
                  type="tel"
                  value={formData.phone}
                  onChange={handleChange}
                  placeholder="+7 (123) 456-78-90"
                  maxLength={20}
                  disabled={loading}
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="email">Email</Label>
                <Input
                  id="email"
                  name="email"
                  type="email"
                  value={formData.email}
                  onChange={handleChange}
                  placeholder="library@example.com"
                  maxLength={100}
                  disabled={loading}
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="website">–í–µ–±-—Å–∞–π—Ç</Label>
                <Input
                  id="website"
                  name="website"
                  type="url"
                  value={formData.website}
                  onChange={handleChange}
                  placeholder="https://library.com"
                  maxLength={200}
                  disabled={loading}
                />
              </div>
            </div>

            <div className="space-y-2">
              <Label htmlFor="description">–û–ø–∏—Å–∞–Ω–∏–µ</Label>
              <Textarea
                id="description"
                name="description"
                value={formData.description}
                onChange={handleChange}
                placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
                rows={5}
                maxLength={1000}
                disabled={loading}
              />
              <p className="text-xs text-muted-foreground">
                {formData.description.length}/1000 —Å–∏–º–≤–æ–ª–æ–≤
              </p>
            </div>

            <div className="flex gap-4 pt-4">
              <Button type="submit" disabled={loading} className="flex-1 bg-violet-600 hover:bg-violet-700">
                {loading ? (
                  <div className="flex items-center gap-2">
                    <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white"></div>
                    –°–æ–∑–¥–∞–Ω–∏–µ...
                  </div>
                ) : (
                  '–°–æ–∑–¥–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É'
                )}
              </Button>
              <Link href="/libraries" className="flex-1">
                <Button
                  type="button"
                  variant="outline"
                  disabled={loading}
                  className="w-full"
                >
                  –û—Ç–º–µ–Ω–∞
                </Button>
              </Link>
            </div>
          </form>
        </CardContent>
      </Card>
    </div>
  )
}
