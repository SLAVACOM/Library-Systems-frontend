'use client'

import { Button } from '@/components/ui/button'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Input } from '@/components/ui/input'
import { Label } from '@/components/ui/label'
import { Textarea } from '@/components/ui/textarea'
import { useRouter } from 'next/navigation'
import { useState } from 'react'

export default function NewBookPage() {
  const router = useRouter()
  const [loading, setLoading] = useState(false)
  const [formData, setFormData] = useState({
    title: '',
    description: '',
    coverUrl: '',
    language: '',
    publicationYear: new Date().getFullYear(),
    pages: 0
  })

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    
    if (!formData.title) {
      alert('–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ')
      return
    }

    try {
      setLoading(true)
      console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–∏–≥–∏:', formData)
      
      // TODO: –î–æ–±–∞–≤–∏—Ç—å API endpoint –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–∏–≥–∏
      // const response = await BookService.createBook(formData)
      // console.log('‚úÖ –ö–Ω–∏–≥–∞ —Å–æ–∑–¥–∞–Ω–∞:', response)
      
      await new Promise(resolve => setTimeout(resolve, 1000)) // –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞
      
      alert('–ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!')
      router.push('/books')
    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–∏–≥–∏:', error)
      const message = error.response?.data?.message || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–Ω–∏–≥—É'
      alert(`–û—à–∏–±–∫–∞: ${message}`)
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="max-w-2xl mx-auto">
      <div className="mb-6">
        <h1 className="text-3xl font-bold">–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–Ω–∏–≥—É</h1>
        <p className="text-gray-600 mt-2">–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–µ</p>
      </div>

      <Card>
        <CardHeader>
          <CardTitle>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–Ω–∏–≥–µ</CardTitle>
        </CardHeader>
        <CardContent>
          <form onSubmit={handleSubmit} className="space-y-6">
            {/* –ù–∞–∑–≤–∞–Ω–∏–µ */}
            <div className="space-y-2">
              <Label htmlFor="title">
                –ù–∞–∑–≤–∞–Ω–∏–µ <span className="text-red-500">*</span>
              </Label>
              <Input
                id="title"
                value={formData.title}
                onChange={(e) => setFormData({ ...formData, title: e.target.value })}
                placeholder="–í–æ–π–Ω–∞ –∏ –º–∏—Ä"
                disabled={loading}
                required
              />
            </div>

            {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
            <div className="space-y-2">
              <Label htmlFor="description">–û–ø–∏—Å–∞–Ω–∏–µ</Label>
              <Textarea
                id="description"
                value={formData.description}
                onChange={(e) => setFormData({ ...formData, description: e.target.value })}
                placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏..."
                rows={5}
                disabled={loading}
                className="resize-none"
              />
              <p className="text-sm text-gray-500">
                {formData.description.length} —Å–∏–º–≤–æ–ª–æ–≤
              </p>
            </div>

            {/* –Ø–∑—ã–∫ */}
            <div className="space-y-2">
              <Label htmlFor="language">–Ø–∑—ã–∫</Label>
              <Input
                id="language"
                value={formData.language}
                onChange={(e) => setFormData({ ...formData, language: e.target.value })}
                placeholder="–†—É—Å—Å–∫–∏–π"
                disabled={loading}
              />
            </div>

            {/* –ì–æ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ */}
            <div className="space-y-2">
              <Label htmlFor="publicationYear">–ì–æ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</Label>
              <Input
                id="publicationYear"
                type="number"
                min="1000"
                max={new Date().getFullYear() + 10}
                value={formData.publicationYear}
                onChange={(e) => setFormData({ ...formData, publicationYear: parseInt(e.target.value) })}
                disabled={loading}
              />
            </div>

            {/* –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü */}
            <div className="space-y-2">
              <Label htmlFor="pages">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü</Label>
              <Input
                id="pages"
                type="number"
                min="0"
                value={formData.pages}
                onChange={(e) => setFormData({ ...formData, pages: parseInt(e.target.value) })}
                placeholder="300"
                disabled={loading}
              />
            </div>

            {/* URL –æ–±–ª–æ–∂–∫–∏ */}
            <div className="space-y-2">
              <Label htmlFor="coverUrl">URL –æ–±–ª–æ–∂–∫–∏</Label>
              <Input
                id="coverUrl"
                type="url"
                value={formData.coverUrl}
                onChange={(e) => setFormData({ ...formData, coverUrl: e.target.value })}
                placeholder="https://example.com/cover.jpg"
                disabled={loading}
              />
              <p className="text-sm text-gray-500">
                –í–≤–µ–¥–∏—Ç–µ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±–ª–æ–∂–∫–∏
              </p>
            </div>

            {/* –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –æ–±–ª–æ–∂–∫–∏ */}
            {formData.coverUrl && (
              <div className="space-y-2">
                <Label>–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –æ–±–ª–æ–∂–∫–∏</Label>
                <div className="border rounded-lg p-4">
                  <img 
                    src={formData.coverUrl} 
                    alt="–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä" 
                    className="w-40 h-60 object-cover rounded-lg mx-auto shadow-md"
                    onError={(e) => {
                      e.currentTarget.src = '/images/base-book.png'
                    }}
                  />
                </div>
              </div>
            )}

            {/* –ö–Ω–æ–ø–∫–∏ */}
            <div className="flex gap-4 pt-4">
              <Button 
                type="submit" 
                disabled={loading}
                className="flex-1"
              >
                {loading ? '–°–æ–∑–¥–∞–Ω–∏–µ...' : '–°–æ–∑–¥–∞—Ç—å –∫–Ω–∏–≥—É'}
              </Button>
              <Button 
                type="button"
                variant="outline"
                onClick={() => router.back()}
                disabled={loading}
                className="flex-1"
              >
                –û—Ç–º–µ–Ω–∞
              </Button>
            </div>
          </form>
        </CardContent>
      </Card>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <Card className="mt-4">
        <CardHeader>
          <CardTitle className="text-sm">–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ</CardTitle>
        </CardHeader>
        <CardContent className="text-sm text-gray-600">
          <p>
            –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–∏–≥–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ—Ä–æ–≤ –∏ –∂–∞–Ω—Ä—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
          </p>
        </CardContent>
      </Card>
    </div>
  )
}
