'use client'

import { Button } from '@/components/ui/button'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Input } from '@/components/ui/input'
import { Label } from '@/components/ui/label'
import { Textarea } from '@/components/ui/textarea'
import { AuthorService } from '@/services/author.service'
import { useRouter } from 'next/navigation'
import { useState } from 'react'

export default function NewAuthorPage() {
  const router = useRouter()
  const [loading, setLoading] = useState(false)
  const [formData, setFormData] = useState({
    firstName: '',
    lastName: '',
    pseudonymous: '',
    biography: '',
    photoUrl: ''
  })

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    
    if (!formData.firstName && !formData.lastName && !formData.pseudonymous) {
      alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –ø–æ–ª–µ: –ò–º—è, –§–∞–º–∏–ª–∏—è –∏–ª–∏ –ü—Å–µ–≤–¥–æ–Ω–∏–º')
      return
    }

    try {
      setLoading(true)
      console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∞:', formData)
      
      const response = await AuthorService.createAuthor(formData)
      console.log('‚úÖ –ê–≤—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω:', response)
      
      alert('–ê–≤—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!')
      router.push('/authors')
    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–≤—Ç–æ—Ä–∞:', error)
      const message = error.response?.data?.message || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞–≤—Ç–æ—Ä–∞'
      alert(`–û—à–∏–±–∫–∞: ${message}`)
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="max-w-2xl mx-auto">
      <div className="mb-6">
        <h1 className="text-3xl font-bold">–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –∞–≤—Ç–æ—Ä–∞</h1>
        <p className="text-gray-600 mt-2">–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ</p>
      </div>

      <Card>
        <CardHeader>
          <CardTitle>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ—Ä–µ</CardTitle>
        </CardHeader>
        <CardContent>
          <form onSubmit={handleSubmit} className="space-y-6">
            {/* –ò–º—è */}
            <div className="space-y-2">
              <Label htmlFor="firstName">–ò–º—è</Label>
              <Input
                id="firstName"
                value={formData.firstName}
                onChange={(e) => setFormData({ ...formData, firstName: e.target.value })}
                placeholder="–õ–µ–≤"
                disabled={loading}
              />
            </div>

            {/* –§–∞–º–∏–ª–∏—è */}
            <div className="space-y-2">
              <Label htmlFor="lastName">–§–∞–º–∏–ª–∏—è</Label>
              <Input
                id="lastName"
                value={formData.lastName}
                onChange={(e) => setFormData({ ...formData, lastName: e.target.value })}
                placeholder="–¢–æ–ª—Å—Ç–æ–π"
                disabled={loading}
              />
            </div>

            {/* –ü—Å–µ–≤–¥–æ–Ω–∏–º */}
            <div className="space-y-2">
              <Label htmlFor="pseudonymous">–ü—Å–µ–≤–¥–æ–Ω–∏–º</Label>
              <Input
                id="pseudonymous"
                value={formData.pseudonymous}
                onChange={(e) => setFormData({ ...formData, pseudonymous: e.target.value })}
                placeholder="–õ. –ù. –¢–æ–ª—Å—Ç–æ–π"
                disabled={loading}
              />
              <p className="text-sm text-gray-500">
                –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä –∏–∑–≤–µ—Å—Ç–µ–Ω –ø–æ–¥ –ø—Å–µ–≤–¥–æ–Ω–∏–º–æ–º
              </p>
            </div>

            {/* –ë–∏–æ–≥—Ä–∞—Ñ–∏—è */}
            <div className="space-y-2">
              <Label htmlFor="biography">–ë–∏–æ–≥—Ä–∞—Ñ–∏—è</Label>
              <Textarea
                id="biography"
                value={formData.biography}
                onChange={(e) => setFormData({ ...formData, biography: e.target.value })}
                placeholder="–ö—Ä–∞—Ç–∫–∞—è –±–∏–æ–≥—Ä–∞—Ñ–∏—è –∞–≤—Ç–æ—Ä–∞..."
                rows={5}
                disabled={loading}
                className="resize-none"
              />
              <p className="text-sm text-gray-500">
                {formData.biography.length} —Å–∏–º–≤–æ–ª–æ–≤
              </p>
            </div>

            {/* URL —Ñ–æ—Ç–æ */}
            <div className="space-y-2">
              <Label htmlFor="photoUrl">URL —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏</Label>
              <Input
                id="photoUrl"
                type="url"
                value={formData.photoUrl}
                onChange={(e) => setFormData({ ...formData, photoUrl: e.target.value })}
                placeholder="https://example.com/photo.jpg"
                disabled={loading}
              />
              <p className="text-sm text-gray-500">
                –í–≤–µ–¥–∏—Ç–µ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
              </p>
            </div>

            {/* –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ñ–æ—Ç–æ */}
            {formData.photoUrl && (
              <div className="space-y-2">
                <Label>–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä</Label>
                <div className="border rounded-lg p-4">
                  <img 
                    src={formData.photoUrl} 
                    alt="–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä" 
                    className="w-32 h-32 object-cover rounded-lg mx-auto"
                    onError={(e) => {
                      e.currentTarget.src = '/images/base-avatar.png'
                    }}
                  />
                </div>
              </div>
            )}

            {/* –ö–Ω–æ–ø–∫–∏ */}
            <div className="flex gap-4 pt-4">
              <Button 
                type="submit" 
                disabled={loading}
                className="flex-1"
              >
                {loading ? '–°–æ–∑–¥–∞–Ω–∏–µ...' : '–°–æ–∑–¥–∞—Ç—å –∞–≤—Ç–æ—Ä–∞'}
              </Button>
              <Button 
                type="button"
                variant="outline"
                onClick={() => router.back()}
                disabled={loading}
                className="flex-1"
              >
                –û—Ç–º–µ–Ω–∞
              </Button>
            </div>
          </form>
        </CardContent>
      </Card>
    </div>
  )
}
